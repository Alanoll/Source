/* Mixins and functions
---------------------------------------------------------------------------------- */

/**
 * Mixin for applying styles everywhere except .source_example
 *
 * @Params: @selector - String (div, a, etc)
 *          @rules - css properties ({border: 1px; color: red;})
 *          @reset - Boolean enable of disable reset (enabled by default) [true | false]
 */
.source-only(@selector, @rules, @reset: true) {
    .source_section > @{selector}@{notCleaningClasses}:not(.source_section_h):not(h2):not(h3):not(h4):not(.source_note):not(.source_data):not(.source_doc):not(.source_warn):not(.source_info),
    .source_section > *@{notCleaningClasses} > @{selector},
    .source_section > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_section > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_section > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},

    .source_info > @{selector},
    .source_info > *@{notCleaningClasses} > @{selector},
    .source_info > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_info > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_info > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},

    .source_note > @{selector},
    .source_note > *@{notCleaningClasses} > @{selector},
    .source_note > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_note > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_note > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},

    .source_doc > @{selector},
    .source_doc > *@{notCleaningClasses} > @{selector},
    .source_doc > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_doc > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_doc > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},

    .source_warn > @{selector},
    .source_warn > *@{notCleaningClasses} > @{selector},
    .source_warn > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_warn > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_warn > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},

    .source_deps > @{selector},
    .source_deps > *@{notCleaningClasses} > @{selector},
    .source_deps > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_deps > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_deps > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector} {
        & when (@reset = true) {
            .reset();
        }
        @rules();
        }
    }

.source-main-only(@selector, @rules, @reset: true) {
    .source_main > @{selector},
    .source_main > *@{notCleaningClasses} > @{selector},
    .source_main > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_main > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector},
    .source_main > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > *@{notCleaningClasses} > @{selector} {
        & when (@reset = true) {
            .reset();
        }
        @rules();
        }
    }

/* /Mixins and functions
---------------------------------------------------------------------------------- */